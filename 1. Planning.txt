# 1. PLANNING
-------------

* Getting involved early
------------------------
		WORKING TOGETHER
		----------------
			ROLES
			-----
			. Developers

			. Designers

			. Client

			. Stakeholders

			. Testers

Communication is king, especially between developers and designers. They need to open up a channel of direct communication as early as possible.  One that'll last throughout the project.

Multiple channels of communication --> Share knowledge across disciplines.

		IT'S IMPERATIVE THIS POOL OF INFORMATION DOESN'T GO TO WASTE AND THAT YOU ARE CONSTANTLY BROADENING YOUR SKILLSET.

		IF YOU HAVE A FREE DAY, SEEK OUT A TEAMMATE TO LEARN SOMETHING FROM. --> BETTER OUTSIDE YOUR PROFESSIONAL COMFORT ZONE.

		
* Knowledge Sharing Benefits
----------------------------
. Expand team competencies

. Strengthen team dynamics

. Save time later if design and development are on the same page from beginning.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Picking your tools
--------------------

* Possible Tools
----------------
. Project management software

. Version control

. Third-party libraries


* Why Discuss This?
-------------------
. Working software over documentation and processes is a core value, but agile projects need management tools

. Agile can be misconstructed as a loose, fly-by-the-seat-of-your-pants methodology.


* Considerations
----------------
. What is the best tool for the job?

. Why?

. Is there training ramp-up time for any tools?


* For Agile Project Tracking
----------------------------

. Free options
--------------
	. Pivotal Tracker

	. Trello

	. Airtable

. Something more complicated
----------------------------
	. Jira

	. Hansoft


* Considerations for Third-Party Libraries
------------------------------------------
. Requirements

. Application size

. In-house dev time

. Cost

. Maintenance


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* To document or not
--------------------

* Considerations
----------------
. Waterfall tends to produce a lot of documentation, sometimes even for its own sake.

. Agile is about leaning down all aspects of development, including documentation.

. It's a constant balancing act between need and time.


* Documentation Guidelines
--------------------------
. Short document with project standards

. Main document with technical designs

. Include project decisions so you can refer back and validate them down the line

. Include the big picture concepts, but stay away from nitty-gritty detail


		PRODUCE NO DOCUMENT UNLESS ITS NEED IS IMMEDIATE AND SIGNIFICANT.

		
* Document Maintenance
----------------------
. If it's significant and meaningful, update your docs

. Otherwise, spend that time developing

------------------------------------------------------------------------------------------------------------------------------------------------------------------
































































































		




