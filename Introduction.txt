# INTRODUCTION
--------------

* Taking your agile development capabilities to the next level
--------------------------------------------------------------

* Avoiding Pitfalls
-------------------
. Keep your eyes on delivering working software

. Write code that's necessary and leave out the garnish

. Look ahead to how requirements may change, and structure your code base for maximum flexibility


* Solutions
-----------
. Record and track bugs according to the version or sprint

. Address bugs as early as possible instead of waiting for a big QA at the tail end of a project

. Consider inserting sprints focused on bug/change requests between the development sprints

. Invest in a good product owner.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

* What you should know
----------------------

* Cards on the Table
--------------------
. This course was designed for developers that are already using agile methodologies.

. It doesn't cover any agile basics or foundational knowledge.

. Course topics are platform agnostic and nontechnical.

			Covered				Not Covered
			-------				-----------
			. Technical design		. Concept	

			. Development			. Requirement gathering
			
			. Testing			. Visual design

			. Release


* Semantics
-----------
When talking about AGILE in this course, we are referring to the SCRUM METHODOLOGY AND IMPLEMENTATION.
		   -----        				 ------------------------------------

I'll be using those terms interchangeably, since semantics isn't the goal of this course.


			



























